// C++ program for above approach
#include <bits/stdc++.h>
using namespace std;

#define R 4
#define C 4

// Function to print wave
// Form for a given matrix
void WavePrint(int m, int n, int arr[R][C])
{
	// Loop to traverse matrix
	for (int j = 0; j < n; j++) {

		// If the current column
		// is even indexed, print
		// it in forward order
		if (j % 2 == 0) {
			for (int i = 0; i < m; i++) {
				cout << arr[i][j] << " ";
			}
		}

		// If the current column
		// is odd indexed, print
		// it in reverse order
		else {
			for (int i = m - 1; i >= 0; i--) {
				cout << arr[i][j] << " ";
			}
		}
		cout<<endl;
	}
}

// Driver Code
int main()
{
	int arr[R][C] = { { 3, 6, 4, 2 },
					{ 7, 8, 11, 5 },
					{ 9, 3, 2, 1 },
					{ 17, 8, 5, 9 },
					 };

	WavePrint(R, C, arr);

	return 0;
}
